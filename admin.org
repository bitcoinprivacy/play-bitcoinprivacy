
* How to setup a bitcoinprivacy server

** We assume you have installed a debian/ubuntu system
** you will need a running docker-lxc >= 1.5 (google how to get it), 
   emacs24 (-nox probably) to read and execute this (do C-c C-o to execute a code block), tmux, git
   #+BEGIN_SRC sh
apt-get update && apt-get install -y lxc-docker emacs24-nox tmux git 
   #+END_SRC

** it might be a good idea to put the docker working directory on a big disk to avoid disk full problems.
   add something like
#+BEGIN_SRC 
DOCKER_OPTS="-g /home/docker"
#+END_SRC 
   to /etc/default/docker
** also, a tmpfs on /tmp might be a nice, put it in /etc/fstab and do mount -a
** finally, start tmux and make a window (C-b c) for every docker you want to keep a bash open in, give it a nice name (C-b ,)
** you might have to do docker login

** to start play:
*** first start a mysql docker:
**** experimental
#+BEGIN_SRC sh
docker run --name mysql2 -e MYSQL_ROOT_PASSWORD=trivial -e MYSQL_DATABASE=movements -v /home/disk2/db/conf.d:/etc/mysql/conf.d -v /home/disk2/db/mysql:/var/lib/mysql -v /home/disk2/db/tmp:/tmp -d  mysql
#+END_SRC 
**** production
#+BEGIN_SRC sh
docker run --name mysql -e MYSQL_ROOT_PASSWORD=trivial -e MYSQL_DATABASE=movements -v /home/db/conf.d:/etc/mysql/conf.d -v /home/db/mysql:/var/lib/mysql -v /home/db/tmp:/tmp -d  mysql
#+END_SRC
note the mounted /tmp, this is needed because otherwise mysql throws
strange errors because the docker /tmp is full


*** then, for experimental
#+BEGIN_SRC sh
docker run -t -i -p 9000:9000 -v /home/disk2/www-data:/root/serverdata --link mysql2:mysql stefanwouldgo/play-bitcoinprivacy:v4 /bin/bash
#+END_SRC

*** for production
#+BEGIN_SRC sh

#+END_SRC

*** or build your own docker by doing
#+BEGIN_SRC sh
git clone https://github.com/stefanwouldgo/play-bitcoinprivacy.git
cd play-bitcoinprivacy/playdocker
docker build .
#+END_SRC
*** and in the docker:
#+BEGIN_SRC sh
cd play-bitcoinprivacy/
git pull
sbt run
#+END_SRC
or, better yet, start emacs first and run activator from within eshell (M-x eshell), so you can have an editor, too

** to start bitcoind:
#+BEGIN_SRC sh
docker run -t -i -p 8333:8333 -v /home/bitcoin-data:/.bitcoin stefanwouldgo/bitcoind:v102  /bin/bash
#+END_SRC
*** and then in the bitcoind docker:
#+BEGIN_SRC sh
/home/start.sh
#+END_SRC
*** wait till bitcoin-cli info tells you you're synced (important, because getblocklist might be started multiple times when it takes too long), then
#+BEGIN_SRC sh
/home/getblocklist.sh && cron
#+END_SRC

** to start bge, think about on which disk you want to run this (if there is one instance running on the same disk already, this could be a problem)
*** then, first start a mysql docker (as above in play)    
*** start the bge docker:
**** experimental
#+BEGIN_SRC sh
docker run -t -i -v /home/bitcoin-data:/root/.bitcoin --link mysql2:mysql -v /home/disk2/www-data:/root/bge/blockchain stefanwouldgo/bge:v22 /bin/bash
#+END_SRC
**** production
#+BEGIN_SRC sh

#+END_SRC
or build your own docker by doing
#+BEGIN_SRC sh
git clone https://github.com/stefanwouldgo/Bitcoin-Graph-Explorer.git bge
cd bge
docker build .
#+END_SRC


** in emacs, if you want IDE support, do (M-x ensime). before doing this for the first time, you need to generate a .ensime file at the project home by
#+BEGIN_SRC sh
sbt gen-ensime
#+END_SRC
